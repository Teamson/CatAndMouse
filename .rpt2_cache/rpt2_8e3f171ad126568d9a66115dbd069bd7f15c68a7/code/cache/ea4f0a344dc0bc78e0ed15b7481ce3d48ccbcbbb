{
  "code": "import GameLogicCrl from \"./GameLogicCrl\";\r\nimport AStar from \"../Libs/AStar\";\r\nexport default class StarPoint extends Laya.Script {\r\n    constructor() {\r\n        super();\r\n        this.myOwner = null;\r\n        this.myBox = null;\r\n        this.arrIndex = new Laya.Vector2(0, 0);\r\n        this.myId = 0;\r\n        this.aStarF = 0;\r\n        this.aStarG = 0;\r\n        this.aStarH = 0;\r\n        this.isColl = false;\r\n    }\r\n    onAwake() {\r\n        this.myOwner = this.owner;\r\n        this.myId = this.myOwner.parent.getChildIndex(this.myOwner);\r\n        this.arrIndex.x = Math.floor(this.myId % 9);\r\n        this.arrIndex.y = Math.floor(this.myId / 9);\r\n        this.checkIsColl();\r\n    }\r\n    checkIsColl() {\r\n        for (let i = 0; i < GameLogicCrl.Share.collPoints.length; i++) {\r\n            let c = GameLogicCrl.Share.collPoints[i];\r\n            let cPos = new Laya.Vector2(c.transform.position.clone().x, c.transform.position.clone().z);\r\n            let mPos = new Laya.Vector2(this.myOwner.transform.position.clone().x, this.myOwner.transform.position.clone().z);\r\n            if (mPos.x <= cPos.x + AStar.gridWidth / 2 && mPos.x >= cPos.x - AStar.gridWidth / 2 &&\r\n                mPos.y <= cPos.y + AStar.gridWidth / 2 && mPos.y >= cPos.y - AStar.gridWidth / 2) {\r\n                this.isColl = true;\r\n                return;\r\n            }\r\n        }\r\n        this.isColl = false;\r\n    }\r\n    onUpdate() {\r\n    }\r\n}\r\n",
  "references": [
    "E:/GitProjects/CatAndMouse/src/Crl/GameLogicCrl.ts",
    "E:/GitProjects/CatAndMouse/src/Libs/AStar.ts"
  ]
}
